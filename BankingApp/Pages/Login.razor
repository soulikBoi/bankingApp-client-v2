@page "/login"
@inject IUserService userService
@inject NavigationManager NavigationManager
<div style="background: linear-gradient(to bottom right, #ff6666, #6666ff);">
    <div class="container py-5">
        <h1 class="text-center text-white mb-4">Welcome to MyBank</h1>
    </div>
</div>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-sm-12">
            <div class="card border-0 shadow-lg">
                <div class="card-body p-5">
                    <h2 class="text-center mb-5">Login to Your Account</h2>
                    <form @onsubmit="HandleSubmit">
                        <div class="form-group">
                            <label for="username">Username</label>
                            <input type="text" class="form-control rounded-pill" id="username" placeholder="Enter your username" @bind-value="@Username" />
                        </div>
                        <div class="form-group">
                            <label for="password">Password</label>
                            <input type="password" class="form-control rounded-pill" id="password" placeholder="Enter your password" @bind-value="@Password" />
                        </div>
                        <button type="submit" class="btn btn-primary btn-block rounded-pill">Login</button>
                        <hr />
                        <p>
                            Don't have an account? <NavLink href="/register" class="text-primary">Register here.</NavLink>
                        </p>
                        @if (!string.IsNullOrEmpty(ErrorMessage))
                        {
                            <div class="alert alert-danger mt-3" role="alert">@ErrorMessage</div>
                        }


                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string Username { get; set; }
    private string Password { get; set; }
    private string ErrorMessage { get; set; }

    private async Task HandleSubmit()
    {

        if (string.IsNullOrEmpty(Username) || string.IsNullOrEmpty(Password))
        {
            ErrorMessage = "Username and password are required.";
           
        }

        ErrorMessage = null;

       
        bool isAuthenticated = await AuthenticateUser(Username, Password);

        if (isAuthenticated)
        {
            toAccountView();
        }
    }

    private async Task<bool> AuthenticateUser(string username, string password)
    {
        var request = await userService.Login(new User(username,password,null,null,-1));

        if (request.Success)
        {
            ErrorMessage = null;
            return true;
        }

        ErrorMessage = request.Error;
        return false;
    }

    private void Register()
    {
        NavigationManager.NavigateTo("/register");
    }

    private void toAccountView()
    {
        NavigationManager.NavigateTo("/AccountView");
    }


}








